//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrderManagementSystem.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OMSEntities : DbContext
    {
        public OMSEntities()
            : base("name=OMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int CreateCustomer(string customerName, Nullable<int> customerAge, string customerGender, Nullable<int> customerPhone, string customerEmail, string password, Nullable<int> userRoleId)
        {
            var customerNameParameter = customerName != null ?
                new ObjectParameter("customerName", customerName) :
                new ObjectParameter("customerName", typeof(string));
    
            var customerAgeParameter = customerAge.HasValue ?
                new ObjectParameter("CustomerAge", customerAge) :
                new ObjectParameter("CustomerAge", typeof(int));
    
            var customerGenderParameter = customerGender != null ?
                new ObjectParameter("CustomerGender", customerGender) :
                new ObjectParameter("CustomerGender", typeof(string));
    
            var customerPhoneParameter = customerPhone.HasValue ?
                new ObjectParameter("CustomerPhone", customerPhone) :
                new ObjectParameter("CustomerPhone", typeof(int));
    
            var customerEmailParameter = customerEmail != null ?
                new ObjectParameter("CustomerEmail", customerEmail) :
                new ObjectParameter("CustomerEmail", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var userRoleIdParameter = userRoleId.HasValue ?
                new ObjectParameter("UserRoleId", userRoleId) :
                new ObjectParameter("UserRoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateCustomer", customerNameParameter, customerAgeParameter, customerGenderParameter, customerPhoneParameter, customerEmailParameter, passwordParameter, userRoleIdParameter);
        }
    }
}
